<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vdlm.dal.mapper.PaymentRequestLogsMapper" >
  <resultMap id="BaseResultMap" type="com.vdlm.dal.model.PaymentRequestLogs" >
    <id column="id" property="id" jdbcType="BIGINT" typeHandler="idHandler" />
    <result column="pay_no" property="payNo" jdbcType="VARCHAR" />
    <result column="pay_type" property="payType" jdbcType="VARCHAR" />
    <result column="pay_detail_type" property="payDetailType" jdbcType="VARCHAR" />
    <result column="total_fee" property="totalFee" jdbcType="DECIMAL" />
    <result column="user_id" property="userId" jdbcType="BIGINT" typeHandler="idHandler" />
    <result column="out_trade_no" property="outTradeNo" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="pay_subject" property="paySubject" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.idCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=idHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=idHandler} and #{criterion.secondValue,typeHandler=idHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=idHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.userIdCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=idHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=idHandler} and #{criterion.secondValue,typeHandler=idHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=idHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.idCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=idHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=idHandler} and #{criterion.secondValue,typeHandler=idHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=idHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.userIdCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=idHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=idHandler} and #{criterion.secondValue,typeHandler=idHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=idHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, pay_no, pay_type, pay_detail_type, total_fee, user_id, out_trade_no, created_at, 
    updated_at, pay_subject
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.vdlm.dal.model.PaymentRequestLogsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vdlm_payment_request_logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="String" >
    select 
    <include refid="Base_Column_List" />
    from vdlm_payment_request_logs
    where id = #{id,jdbcType=BIGINT,typeHandler=idHandler}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="String" >
    delete from vdlm_payment_request_logs
    where id = #{id,jdbcType=BIGINT,typeHandler=idHandler}
  </delete>
  <delete id="deleteByExample" parameterType="com.vdlm.dal.model.PaymentRequestLogsExample" >
    delete from vdlm_payment_request_logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.vdlm.dal.model.PaymentRequestLogs" >
    insert into vdlm_payment_request_logs (id, pay_no, pay_type, 
      pay_detail_type, total_fee, user_id, 
      out_trade_no, created_at, updated_at, 
      pay_subject)
    values (#{id,jdbcType=BIGINT,typeHandler=idHandler}, #{payNo,jdbcType=VARCHAR}, #{payType,jdbcType=VARCHAR}, 
      #{payDetailType,jdbcType=VARCHAR}, #{totalFee,jdbcType=DECIMAL}, #{userId,jdbcType=BIGINT,typeHandler=idHandler}, 
      #{outTradeNo,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{paySubject,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.vdlm.dal.model.PaymentRequestLogs" >
    insert into vdlm_payment_request_logs
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="payNo != null" >
        pay_no,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="payDetailType != null" >
        pay_detail_type,
      </if>
      <if test="totalFee != null" >
        total_fee,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="outTradeNo != null" >
        out_trade_no,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="paySubject != null" >
        pay_subject,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT,typeHandler=idHandler},
      </if>
      <if test="payNo != null" >
        #{payNo,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="payDetailType != null" >
        #{payDetailType,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null" >
        #{totalFee,jdbcType=DECIMAL},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT,typeHandler=idHandler},
      </if>
      <if test="outTradeNo != null" >
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="paySubject != null" >
        #{paySubject,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.vdlm.dal.model.PaymentRequestLogsExample" resultType="java.lang.Integer" >
    select count(*) from vdlm_payment_request_logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update vdlm_payment_request_logs
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT,typeHandler=idHandler},
      </if>
      <if test="record.payNo != null" >
        pay_no = #{record.payNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=VARCHAR},
      </if>
      <if test="record.payDetailType != null" >
        pay_detail_type = #{record.payDetailType,jdbcType=VARCHAR},
      </if>
      <if test="record.totalFee != null" >
        total_fee = #{record.totalFee,jdbcType=DECIMAL},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT,typeHandler=idHandler},
      </if>
      <if test="record.outTradeNo != null" >
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paySubject != null" >
        pay_subject = #{record.paySubject,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update vdlm_payment_request_logs
    set id = #{record.id,jdbcType=BIGINT,typeHandler=idHandler},
      pay_no = #{record.payNo,jdbcType=VARCHAR},
      pay_type = #{record.payType,jdbcType=VARCHAR},
      pay_detail_type = #{record.payDetailType,jdbcType=VARCHAR},
      total_fee = #{record.totalFee,jdbcType=DECIMAL},
      user_id = #{record.userId,jdbcType=BIGINT,typeHandler=idHandler},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      pay_subject = #{record.paySubject,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.vdlm.dal.model.PaymentRequestLogs" >
    update vdlm_payment_request_logs
    <set >
      <if test="payNo != null" >
        pay_no = #{payNo,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="payDetailType != null" >
        pay_detail_type = #{payDetailType,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null" >
        total_fee = #{totalFee,jdbcType=DECIMAL},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT,typeHandler=idHandler},
      </if>
      <if test="outTradeNo != null" >
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="paySubject != null" >
        pay_subject = #{paySubject,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT,typeHandler=idHandler}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vdlm.dal.model.PaymentRequestLogs" >
    update vdlm_payment_request_logs
    set pay_no = #{payNo,jdbcType=VARCHAR},
      pay_type = #{payType,jdbcType=VARCHAR},
      pay_detail_type = #{payDetailType,jdbcType=VARCHAR},
      total_fee = #{totalFee,jdbcType=DECIMAL},
      user_id = #{userId,jdbcType=BIGINT,typeHandler=idHandler},
      out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      pay_subject = #{paySubject,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT,typeHandler=idHandler}
  </update>
</mapper>